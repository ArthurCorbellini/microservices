networks:
  sbdb-network:
    driver: "bridge" # create the network with the name "sbdb-network"

services:
  sbdb-db-accounts:
    container_name: sbdb-db-accounts
    ports:
      - 3306:3306
    environment:
      MYSQL_DATABASE: sbdb-db-accounts
    extends:
      file: common-config.yml
      service: common-db-config

  sbdb-db-loans:
    container_name: sbdb-db-loans
    ports:
      - 3307:3306
    environment:
      MYSQL_DATABASE: sbdb-db-loans
    extends:
      file: common-config.yml
      service: common-db-config

  sbdb-db-cards:
    container_name: sbdb-db-cards
    ports:
      - 3308:3306
    environment:
      MYSQL_DATABASE: sbdb-db-cards
    extends:
      file: common-config.yml
      service: common-db-config

  rabbit:
    image: rabbitmq:3.13-management
    hostname: rabbitmq
    ports:
      - "5672:5672"
      - "15672:15672"
    # check se rabbitmq está operante (conforme documentação)
    healthcheck:
      test: rabbitmq-diagnostics check_port_connectivity
      interval: 10s
      timeout: 5s
      retries: 10
      start_period: 5s
    extends:
      file: common-config.yml
      service: network-deploy-service

  configserver:
    image: "artcorb/sbdb-configserver:0.0.1-SNAPSHOT"
    container_name: sbdb-configserver
    ports:
      - "8888:8888"
    # verifica se o rabbitmq está operante antes de subir
    depends_on:
      rabbit:
        condition: service_healthy
    # check se configserver está operante
    healthcheck:
      test: "curl --fail --silent localhost:8888/actuator/health/readiness | grep UP || exit 1"
      interval: 10s
      timeout: 5s
      retries: 10
      start_period: 10s
    extends:
      file: common-config.yml
      service: common-base-config

  eurekaserver:
    image: "artcorb/sbdb-eurekaserver:0.0.1-SNAPSHOT"
    container_name: sbdb-eurekaserver
    ports:
      - "8070:8070"
    depends_on:
      rabbit:
        condition: service_healthy
    healthcheck:
      test: "curl --fail --silent localhost:8070/actuator/health/readiness | grep UP || exit 1"
      interval: 10s
      timeout: 5s
      retries: 10
      start_period: 10s
    extends:
      file: common-config.yml
      service: common-configserver-config
    environment:
      SPRING_APPLICATION_NAME: "eurekaserver"

  accounts:
    image: "artcorb/sbdb-ms-accounts:0.0.1-SNAPSHOT"
    container_name: sbdb-ms-accounts
    ports:
      - "8080:8080" # in/out ports for the microservice
    # verifica se configserver está operante antes de subir
    depends_on:
      sbdb-db-accounts:
        condition: service_healthy
    environment:
      SPRING_APPLICATION_NAME: "accounts"
      SPRING_DATASOURCE_URL: "jdbc:mysql://sbdb-db-accounts:3306/sbdb-db-accounts" # communication between containers
    extends:
      file: common-config.yml
      service: common-eurekaserver-config

  loans:
    image: "artcorb/sbdb-ms-loans:0.0.1-SNAPSHOT"
    container_name: sbdb-ms-loans
    ports:
      - "8082:8082"
    depends_on:
      sbdb-db-loans:
        condition: service_healthy
    environment:
      SPRING_APPLICATION_NAME: "loans"
      SPRING_DATASOURCE_URL: "jdbc:mysql://sbdb-db-loans:3306/sbdb-db-loans" # communication between containers
    extends:
      file: common-config.yml
      service: common-eurekaserver-config

  cards:
    image: "artcorb/sbdb-ms-cards:0.0.1-SNAPSHOT"
    container_name: sbdb-ms-cards
    ports:
      - "8081:8081"
    depends_on:
      sbdb-db-cards:
        condition: service_healthy
    environment:
      SPRING_APPLICATION_NAME: "cards"
      SPRING_DATASOURCE_URL: "jdbc:mysql://sbdb-db-cards:3306/sbdb-db-cards" # communication between containers
    extends:
      file: common-config.yml
      service: common-eurekaserver-config
